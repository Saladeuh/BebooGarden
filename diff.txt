diff --git a/BebooGarden/Game1.KeyboardLogic.cs b/BebooGarden/Game1.KeyboardLogic.cs
index 36a5619..c9dfe7f 100644
--- a/BebooGarden/Game1.KeyboardLogic.cs
+++ b/BebooGarden/Game1.KeyboardLogic.cs
@@ -32,8 +32,7 @@ public partial class Game1
 
   private void HandleKeyboardNavigation(KeyboardState currentKeyboardState)
   {
-    if(_paused) return;
-    if (_currentScreen == GameScreen.game)
+    if (_currentScreen == GameScreen.game && !_paused)
     {
       MainGameKeyboardLogic(currentKeyboardState);
     }
@@ -150,7 +149,7 @@ public partial class Game1
         }
       }
     }
-    if (currentKeyboardState.IsKeyDown(Keys.Escape))
+    if (IsKeyPressed(currentKeyboardState, Keys.Escape) && !EscapeJustPressed)
     {
       SwitchToScreen(GameScreen.MainMenu);
     }
@@ -209,6 +208,10 @@ public partial class Game1
         button.DoClick();
       }
     }
+    if (IsKeyPressed(currentKeyboardState, Keys.Escape) && !EscapeJustPressed)
+    {
+      _aMenuShouldBeClosed = true;
+    }
   }
 
   public bool IsKeyPressed(KeyboardState currentKeyboardState, params Keys[] keys)
diff --git a/BebooGarden/Game1.UI.MainMenu.cs b/BebooGarden/Game1.UI.MainMenu.cs
index 4e31294..a3157ca 100644
--- a/BebooGarden/Game1.UI.MainMenu.cs
+++ b/BebooGarden/Game1.UI.MainMenu.cs
@@ -37,7 +37,6 @@ public partial class Game1
       HorizontalAlignment = HorizontalAlignment.Center,
       VerticalAlignment = VerticalAlignment.Center
     };
-
     Label titleLabel = new()
     {
       Text = GameText.ui_mainmenu,
@@ -133,16 +132,10 @@ public partial class Game1
     {
       //dget.KeyDown += OnEscapePressed;
     }
+    PreviousPanels[_escapeMenuPanel] = _gamePanel;
     _desktop.FocusedKeyboardWidget = inventoryButton;
   }
 
-  private void OnEscapePressedMainMenu(object? sender, GenericEventArgs<Keys> e)
-  {
-    if (e.Data == Keys.Escape)
-    {
-      CloseEscapeMenu();
-    }
-  }
 
   private void ShowInventoryMenu()
   {
@@ -207,6 +200,7 @@ public partial class Game1
     grid.Widgets.Add(backButton);
 
     _inventoryPanel.Widgets.Add(grid);
+    PreviousPanels[_inventoryPanel] = _escapeMenuPanel;
     _desktop.Root = _inventoryPanel;
   }
 
@@ -279,6 +273,7 @@ public partial class Game1
     grid.Widgets.Add(backButton);
 
     _teleportPanel.Widgets.Add(grid);
+    PreviousPanels[_teleportPanel] = _escapeMenuPanel;
     _desktop.Root = _teleportPanel;
   }
 
@@ -336,6 +331,7 @@ public partial class Game1
     grid.Widgets.Add(backButton);
 
     _bebooTPPanel.Widgets.Add(grid);
+    PreviousPanels[_bebooTPPanel] = _escapeMenuPanel;
     _desktop.Root = _bebooTPPanel;
   }
 
@@ -387,6 +383,7 @@ public partial class Game1
     grid.Widgets.Add(backButton);
 
     _languagesPanel.Widgets.Add(grid);
+    PreviousPanels[_languagesPanel] = _escapeMenuPanel;
     _desktop.Root = _languagesPanel;
   }
 
diff --git a/BebooGarden/Game1.UI.Shop.cs b/BebooGarden/Game1.UI.Shop.cs
index 561852f..4f1d602 100644
--- a/BebooGarden/Game1.UI.Shop.cs
+++ b/BebooGarden/Game1.UI.Shop.cs
@@ -15,8 +15,8 @@ namespace BebooGarden;
 public partial class Game1
 {
   private Panel _mainShopPanel;
-  private Panel _itemsPanel;
-  private Panel _rollsPanel;
+  private Panel _itemsSopPanel;
+  private Panel _rollsShopPanel;
 
   private void CreateShopMenus()
   {
@@ -77,16 +77,11 @@ public partial class Game1
     mainGrid.Widgets.Add(closeButton);
 
     _mainShopPanel.Widgets.Add(mainGrid);
-
-    foreach (var widget in mainGrid.Widgets)
-    {
-      //dget.KeyDown += OnEscapePressed;
-    }
   }
 
   private void CreateItemsMenu()
   {
-    _itemsPanel = new Panel();
+    _itemsSopPanel = new Panel();
 
     VerticalStackPanel grid = new()
     {
@@ -146,17 +141,13 @@ public partial class Game1
     };
     grid.Widgets.Add(backButton);
 
-    _itemsPanel.Widgets.Add(grid);
+    _itemsSopPanel.Widgets.Add(grid);
 
-    foreach (var widget in grid.Widgets)
-    {
-      widget.KeyDown += OnEscapePressed;
-    }
   }
 
   private void CreateRollsMenu()
   {
-    _rollsPanel = new Panel();
+    _rollsShopPanel = new Panel();
 
     VerticalStackPanel grid = new()
     {
@@ -215,12 +206,7 @@ public partial class Game1
     };
     grid.Widgets.Add(backButton);
 
-    _rollsPanel.Widgets.Add(grid);
-
-    foreach (var widget in grid.Widgets)
-    {
-      widget.KeyDown += OnEscapePressed;
-    }
+    _rollsShopPanel.Widgets.Add(grid);
   }
 
   private void OnEscapePressed(object? sender, GenericEventArgs<Keys> e)
@@ -246,7 +232,6 @@ public partial class Game1
   {
     _desktop.Root = _mainShopPanel;
 
-    // Définir le focus sur le premier bouton
     var itemsButton = _mainShopPanel.FindWidgetById("itemsButton");
     if (itemsButton != null)
     {
@@ -260,10 +245,10 @@ public partial class Game1
 
     // Recréer le menu des objets pour actualiser les données
     CreateItemsMenu();
-    _desktop.Root = _itemsPanel;
+    _desktop.Root = _itemsSopPanel;
 
     // Définir le focus sur le premier élément disponible
-    var firstButton = _itemsPanel.Widgets.First()?.GetChildren()?.FirstOrDefault(w => w.Id?.StartsWith("item_") == true);
+    var firstButton = _itemsSopPanel.Widgets.First()?.GetChildren()?.FirstOrDefault(w => w.Id?.StartsWith("item_") == true);
     if (firstButton != null)
     {
       _desktop.FocusedKeyboardWidget = firstButton;
@@ -275,11 +260,11 @@ public partial class Game1
     SoundSystem.System.PlaySound(Game1.Instance.SoundSystem.MenuOkSound);
 
     // Recréer le menu des rouleaux pour actualiser les données
-    CreateRollsMenu();
-    _desktop.Root = _rollsPanel;
+   CreateRollsMenu();
+    _desktop.Root = _rollsShopPanel;
 
     // Définir le focus sur le premier élément disponible
-    var firstButton = _rollsPanel.Widgets.First()?.GetChildren()?.FirstOrDefault(w => w.Id?.StartsWith("roll_") == true);
+    var firstButton = _rollsShopPanel.Widgets.First()?.GetChildren()?.FirstOrDefault(w => w.Id?.StartsWith("roll_") == true);
     if (firstButton != null)
     {
       _desktop.FocusedKeyboardWidget = firstButton;
@@ -309,5 +294,6 @@ public partial class Game1
     SoundSystem.PlayCinematic(SoundSystem.CinematicElevator, false);
     Game1.Instance.ChangeMapMusic();
     Game1.Instance.Unpause();
+    SwitchToScreen(GameScreen.game);
   }
 }
diff --git a/BebooGarden/Game1.UI.cs b/BebooGarden/Game1.UI.cs
index 0029d9f..8248075 100644
--- a/BebooGarden/Game1.UI.cs
+++ b/BebooGarden/Game1.UI.cs
@@ -10,6 +10,7 @@ using Microsoft.Xna.Framework.Graphics;
 using Microsoft.Xna.Framework.Media;
 using Myra.Graphics2D.UI;
 using System;
+using System.Collections.Generic;
 using System.Globalization;
 using System.Linq;
 
@@ -22,6 +23,8 @@ public partial class Game1
   public Desktop _desktop;
   private Panel _gamePanel;
   public TalkDialog? _talkDialog = null;
+  public Dictionary<Panel, Panel> PreviousPanels { get; set; } = [];
+
   public void SwitchToScreen(GameScreen screen)
   {
     _previousGameScreen=_currentScreen;
diff --git a/BebooGarden/Game1.Update.cs b/BebooGarden/Game1.Update.cs
index 917a633..de2bb83 100644
--- a/BebooGarden/Game1.Update.cs
+++ b/BebooGarden/Game1.Update.cs
@@ -9,6 +9,7 @@ using BebooGarden.UI.ScriptedScene;
 using CrossSpeak;
 using Microsoft.Xna.Framework;
 using Microsoft.Xna.Framework.Input;
+using Myra.Graphics2D.UI;
 using System;
 using System.Collections.Generic;
 using System.Linq;
@@ -23,15 +24,13 @@ public partial class Game1
   public KeyboardState _currentKeyboardState;
   private bool _paused;
 
+  public bool EscapeJustPressed { get; set; }
+
   protected override void Update(GameTime gameTime)
   {
     GetKeyStates(out _currentKeyboardState, out MouseState currentMouseState);
     _desktop.UpdateInput();
-    if (_aMenuShouldBeClosed)
-    {
-      SwitchToScreen(GameScreen.game);
-      _aMenuShouldBeClosed = false;
-    }
+    CloseMenuIfNeeded();
     foreach (GameCore.Pet.Beboo beboo in Map?.Beboos)
     {
       beboo.Update(gameTime);
@@ -80,6 +79,38 @@ public partial class Game1
     base.Update(gameTime);
   }
 
+  private void CloseMenuIfNeeded()
+  {
+    if (_aMenuShouldBeClosed)
+    {
+      SoundSystem.System.PlaySound(SoundSystem.MenuBackSound);
+      if (PreviousPanels.TryGetValue((Panel)_desktop.Root, out var previousPanal))
+      {
+        if (previousPanal == _gamePanel)
+        {
+          SwitchToScreen(GameScreen.game);
+        }
+        else
+        {
+          _desktop.Root = previousPanal;
+        }
+      }
+      else if (_desktop.Root == _mainShopPanel)
+      {
+        CloseShop();
+      }
+      else if (_desktop.Root == _itemsSopPanel || _desktop.Root == _rollsShopPanel)
+      {
+        ShowMainShopMenu();
+      }
+      else
+      {
+        SwitchToScreen(GameScreen.game);
+      }
+      _aMenuShouldBeClosed = false;
+    }
+  }
+
   private void UpdateScriptedScene(GameTime gameTime)
   {
     _scriptedScene?.Update(gameTime);
@@ -117,9 +148,20 @@ public partial class Game1
         allPressedKeys = allPressedKeys.Distinct().ToList();
       }
     }
+    if (EscapeJustPressed)
+    {
+      allPressedKeys.RemoveAll(key => key == Keys.Escape);
+      EscapeJustPressed = false;
+    }
     currentKeyboardState = new(allPressedKeys.ToArray());
     currentMouseState = Mouse.GetState();
   }
+  public void RemoveEscapeKey()
+  {
+    List<Keys> allPressedKeys = _currentKeyboardState.GetPressedKeys().ToList();
+    allPressedKeys.RemoveAll(key => key == Keys.Escape);
+    _currentKeyboardState = new(allPressedKeys.ToArray());
+  }
   public void Pause()
   {
     _paused = true;
@@ -131,7 +173,7 @@ public partial class Game1
   }
   public void Unpause()
   {
-    _paused=false;
+    _paused = false;
     foreach (Beboo beboo in Map?.Beboos) beboo.Unpause();
     SoundSystem.EnableAmbiTimer();
     if (Map == null) return;
diff --git a/BebooGarden/UI/ChosseMenu.cs b/BebooGarden/UI/ChosseMenu.cs
index ad33a10..9707aed 100644
--- a/BebooGarden/UI/ChosseMenu.cs
+++ b/BebooGarden/UI/ChosseMenu.cs
@@ -84,14 +84,6 @@ public class ChooseMenu<T>
     _menuPanel.Widgets.Add(grid);
   }
 
-  private void OnEscapePressed(object? sender, GenericEventArgs<Keys> e)
-  {
-    if (e.Data == Keys.Escape && _allowCancel)
-    {
-      OnCancel();
-    }
-  }
-
   private void OnItemSelected(T item)
   {
     Game1.Instance.SoundSystem.System.PlaySound(Game1.Instance.SoundSystem.MenuOkSound);
@@ -103,7 +95,7 @@ public class ChooseMenu<T>
   {
     Game1.Instance.SoundSystem.System.PlaySound(Game1.Instance.SoundSystem.MenuBackSound);
     Close();
-    _onItemSelected?.Invoke(default(T)); // Passer la valeur par défaut pour indiquer l'annulation
+    _onItemSelected?.Invoke(default(T));
   }
 
   public void Show()
